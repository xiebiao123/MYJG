#mongodb://[username:password@]host1[:port1][,host2[:port2],…[,hostN[:portN]]][/[database][?options]]
mongo.client.uri=mongodb://127.0.0.1:27017/db_mongo

# Redis 配置
redis.server.ip=127.0.0.1
redis.server.port=6379
redis.server.password=
#最大空闲连接数
redis.maxIdle=20
#最大连接数
redis.maxTotal=20
#
redis.defaultTimeOut=5000
#最大建立连接等待时间
redis.maxWaitMillis=5000
#最小空闲连接数
redis.minIdle=0
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=false
#返回连接时,检测连接是否成功
redis.testOnReturn=false
 #空闲时,是否检测连接
redis.testWhileIdle=false
#空闲连接多长时间后会被收回 -1不回收
redis.timeBetweenEvictionRunsMillis=-1

#数据库的URL
jdbc.url=jdbc:mysql://localhost:3306/cssp?characterEncoding=UTF-8
#数据库的用户名
jdbc.username=root
#数据库的密码
jdbc.password=
#jdbc开发测试环境
jdbc.production=false
#初始连接数
druid.initialSize=10
#最小空闲连接数
druid.minIdle=10
#最大连接数
druid.maxActive=50
#超时等待时间以毫秒为单位
druid.maxWait=60000
#空闲连接多长时间后会被收回
druid.timeBetweenEvictionRunsMillis=60000
#连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值
druid.minEvictableIdleTimeMillis=300000
#心跳查询
druid.validationQuery=SELECT 1
#空闲时,是否检测连接
druid.testWhileIdle=true
#是否在从池中取出连接前进行检验
druid.testOnBorrow=false
#返回连接时,检测连接是否成功
druid.testOnReturn=false
druid.poolPreparedStatements=false
druid.maxPoolPreparedStatementPerConnectionSize=20
druid.filters=wall,stat